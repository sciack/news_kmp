#
# Release on tag
#

name: Ios app release
on:
  push:
    tags:
      - '*'

jobs:
  deploy_ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@v2
      - name: "Setup xcode"
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: "Build retrieve the version"
        run: |
          ./gradlew versionEnv 
          # export the variable in the file as pipeline env
          cat version.env >> "$GITHUB_ENV"
      - name: "Setup app version"
        uses: yanamura/ios-bump-version@v1
        with:
          version: ${{ env.APP_VERSION_NAME }}
          build-number: ${{ env.APP_VERSION_CODE }}
          project-path: iosApp
      - name: "Build iOS App"
        uses: yukiarrr/ios-build-action@v1.9.1
        with:
          project-path: iosApp/iosApp.xcodeproj
          p12-base64: ${{ secrets.APPLE_DEV_P12_CERT_B64 }}
          mobileprovision-base64: ${{ secrets.KNEWS_APP_PROFILE }}
          code-signing-identity: "iPhone Distribution: Zuehlke Engineering AG (33AUWD68J4)"
          team-id: ${{ secrets.ZUHLKE_IOS_TEAM_ID }}
          certificate-password: ${{ secrets.APPLE_DEV_CERT_PASSWORD }}
          #export-options: iosApp/exportOptionsRelease.plist
          export-method: "app-store"
      - name: "Upload IPA file as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: "KNews App IPA"
          path: "output.ipa"
      - name: Install private API key P8
        env:
          PRIVATE_API_KEY_BASE64: ${{ secrets.KNEWS_IOS_APPSTORE_API_PRIVATE_KEY }}
          API_KEY: ${{ secrets.KNEWS_IOS_APPSTORE_API_KEY_ID }}
        run: |
          mkdir -p ~/private_keys
          echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8
      - name: "Upload IPA file to TestFlight"
        env:
          API_KEY: ${{ secrets.KNEWS_IOS_APPSTORE_API_KEY_ID }}
          API_ISSUER: ${{ secrets.KNEWS_IOS_APPSTORE_ISSUER_ID  }}
        run: xcrun altool --output-format xml --upload-app -f output.ipa -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER